#Accelerator node login
ssn 0.accelerator.0
ssn hostname
ssh admin@hostname

#Accelerator node version
sudo service avagent status

#Add single user to Avamar grid
mccli user add --authenticator=Axion --client-domain=/ --name=avamaruser --password=abc123 --password-confirm=abc123 --role=Administrator

#Add multiple users to Avamar grid - pre-req. Add names of users to be used in below command
vi USER
for i in $(cat USER); do  mccli user add --authenticator=Axion --client-domain=/ --name=$i --password=abc123 --password-confirm=abc123 --role=BackupRestoreOperator; done
\

#All Backup Jobs
backuphistory () { for i in `[ -f $* ] && cat $* || echo  $*`; do echo "********* $i *********"; /usr/local/avamar/bin/mccli backup show --verbose --name=$i|sed '1,1d'; done; }
backuphistory anyfilename > clients_backup_history.txt

#Avtar.cmd file
--debug
--stats
--status=60
--nocache
--verbose
--x15=16, system state backup exclusions to make it smaller, speed up backup. The “x15=16″ command will cut out windows/system32 and reduce the size of the system state, Avamar has a bug which will fail the system state with a code-3 tape block error if the system state exceeds a fraction value. This command is safe so long as you are capturing the windows/system32 folder in the file system backup.
--x29=14, The folder "CurrentVersion" is an NTFS link pointing to the folder <Version number> (e.g. "12.1.671.4971.105") under c:\program files\symantec\smantec endpoint protection\<Version Number> The flag ignores NTFS link and backs up the folders as they are.
--x13=1, skip extended attributes (for files) check in HPUX 
--x25=-1, enable debugging for Avamar to DD backups
--ddr-index=1, Writing to Avamar with a Data Domain backend
-ddr=true, Writing to Avamar with a Data Domain backend
--server=abc.xyz

#Backend Capacity Report (entire Avamar grid)
backendreport --include=/
backendreport --include=/clientname

#Backup History for Multiple Clients
source /home/admin/bin/avamar_functions.sh
cl
ls -alt | more
cat Clients_20150519113020.txt| grep /CSCi/ > output.txt
his output.txt

#Backup Report List and Retentions
mccli backup show --verbose --name=

#Billing Script (admin only)
/usr/local/avamar/bin/client_usage.pl

#Bring Avamar into a controlled state
dpnctl stop maint
dpnctl stop sched
avmaint suspend
avmaint config --ava asynccrunching=false
avmaint config --ava indexcacheallowed=0
suspend crons
dpnctl status
avmaint config --ava cpmostrecent=1
avmaint rmcp --ava --full

#Capacity management and change rates
capacity.sh --gb --top=15 --days=30

#Check freespace on Avamar filesystems
df -h
sudo du -h -x --max-depth=1 /data01/home/admin

#Check latest version of Linux OS security rollup applied to a grid
uname -a

#Configure Grid so operators can perform restores
cd /usr/local/avamar/var/mc/server_data/prefs
cp mcserver.xml x-mcserver.xml-backup
vi mcserver.xml

#Crontab
sudo crontab -e -u admin
sudo crontab -l -u admin

grep -i "restores" /usr/local/avamar/var/mc/server_data/prefs/mcserver.xml
#<entry key="admin_can_direct_restores" value="true" />
#<entry key="restore_admin_can_direct_restores" value="true" /> 
#Restart MCS after editing "mcserver.xml"
dpnctl stop mcs
dpnctl start mcs
dpnctl start sched
dpnctl status  

#Copy file from one site to another (from destination)
scp admin@avamarhostname-repl:/usr/local/avamar/src/Avamar.zip Avamar.zip .
mv /usr/local/avamar/src/xyz.avp /data01/avamar/repo/packages

#Copy folder with files to another folder in Unix/Linux? 
cp -R source destination

#Dataset modifications
#Windows 2003 system state backup and logs to alternate drive
systemstatefile=D:\avamar\systemstate.bkf
vardir=D:\avamar\var

#Decipher Avamar passwords
cd /usr/local/avamar/var/mc/server_data/prefs/
ls -lrth
cp -p mcserver.xml mcserver_old.xml
mccipher decrypt --all
grep ap mcserver.xml
mccipher encrypt –all

#Delete backups from Avamar grid
grep xyz ALL_clients.txt | while read client ; 
  do  
  echo $client; 
  mccli backup show --verbose --name=$client | grep Avamar  | while read  DATE TIME ZONE LABEL SIZE  OTHER;
   do    echo "$DATE $TIME $ZOME $LABEL $SIZE $OTHER";    
   echo "mccli backup delete  --labelNum=$LABEL --force=true --created=$DATE  --name=$client";   
   done;
  done | tee abc_date_$$.txt 
  
  Look at output
  grep 'labelNum=1 ' abc_date_$$.txt > abc.sh;chmod 700 abc.sh;./abc.sh

#Determine Avamar generation
ssh-agent bash
ssh-add ~/.ssh/dpnid
mapall --noerror --quiet --all+ --user=root /usr/bin/ipmitool fru print 0 | grep 'Product Part Number'

#Disk rebuild status
ssh root@IP
omreport storage pdisk controller=0 | egrep -i "name|state|progress"

watch -d 'omreport storage pdisk controller=0 pdisk=0:0:2'

avsysreport pdisk | egrep 'Status|Slot Number|Enclosure Device'
avsysreport pdisk pdisk=8:0 
– Enclosure 8, Slot 0

avsysreport pdisk pdisk=20:6 | egrep 'Status|Slot Number|Enclosure Device|Rebuild Progress'

#Gen4
Check disk rebuild status 
ssh-agent bash
ssh-add ~admin/.ssh/dpnid
mapall --noerror --user=root 'grep -i "remove\|insert\|rebuild" /var/log/messages'
mapall --noerror 'omreport storage pdisk controller=0 | grep "Status\|State"'

#GEN4s
ssh-agent bash
ssh-add ~admin/.ssh/dpnid
mapall --noerror --user=root 'grep -i "remove\|insert\|rebuild" /var/log/messages'
mapall --noerror 'avsysreport pdisk controller=0 | grep "Status\|State"'  

#Display all backups for all servers on the grid
#(Does not include MC_RETIRED or REPLICATE domain)
#Generate a client list.

backuphistory () {
for i in `[ -f $* ] && cat $* || echo  $*`
do
echo "********* $i *********"
/usr/local/avamar/bin/mccli backup show --verbose --name=$i|sed '1,1d'
done
}

source /home/admin/bin/avamar_functions.sh
cl

backuphistory Clients_2016***.txt > backuphistory.txt

#This includes MC_RETIRED
backuphistory () {
for i in `[ -f $* ] && cat $* || echo  $*`
do
echo "********* $i *********"
/usr/local/avamar/bin/mccli backup show --verbose --name=$i|sed '1,1d'
done
}

backuphistory ALL_clients_combined.txt > backuphistory.txt
cat backuphistory.txt

/home/admin/bin/send_backup_coreteam_mailbox.pl /home/admin/backuphistory.txt emailsubject

#Display route info on all nodes
source /home/admin/bin/avamar_functions.sh 
rt

#Download Avamar clients from grid
wget --no-check-certificate https://avamargridname.com/DPNInstalls/downloads/RHEL5-X86_64/AvamarClient-linux-rhel4-x86_64-7.1.101-145.rpm
wget --no-check-certificate https://avamargridname.com/DPNInstalls/downloads/WIN32//AvamarClient-windows-x86-6.0.102-156.msi
wget --no-check-certificate https://avamargridname.com/DPNInstalls/downloads/RHEL6-X86_64//AvamarClient-linux-sles11-x86_64-7.2.101-32.rpm

#Downloading Avamar upgrade packages from EMC repository
curl --disable-eprt -P - -O ftp://avamar_ftp:anonymous@ftp.emc.com/xyz.avp
md5sum -c xyz.avp.md5sum
cp xyz.avp /data01/avamar/repo/packages/

#DRAC IP Addresses
ssh-agent bash
ssh-add ~/.ssh/dpnid
mapall --noerror --user=root --nodes=all+ --quiet 'echo `hostname`'" - iDRAC "'`racadm getniccfg | grep "IP Address "`'

#RMM4
ssh-agent bash
ssh-add ~/.ssh/dpnid
mapall --noerror  --all+ --user=root 'ipmitool lan print 3'
exit

#Find direct to Avamar backups (with DD)
bin/ALL_clients.sh
export DATEX=$(date +%Y%m%d)
cat  ALL_clients.txt | while read client ;   do    echo $client;   mccli backup show --verbose --name=$client | grep Avamar  | while read  DATE TIME ZONE LABEL SIZE  OTHER;    do    echo "BACKUP= $DATE $TIME $ZOME $LABEL $SIZE $OTHER";       echo "mccli backup delete  --labelNum=$LABEL --force=true --created=$DATE  --name=$client";      done;  done | tee abc_backuptoAvamar_$DATEX.txt
grep BACKUP abc_backuptoAvamar_$DATEX.txt 
#This will show what replicated and direct to Avamar
mccli client show --recursive=true --replicated=true| sed '1,3d'| while read client domain x;    do     echo $domain/$client;    mccli backup show --verbose --name=$domain/$client | grep Avamar  | while read  DATE TIME ZONE LABEL SIZE  OTHER;    do    echo "$domain/$client BACKUP= $DATE $TIME $ZOME $LABEL $SIZE $OTHER";        echo "mccli backup delete  --labelNum=$LABEL --force=true --created=$DATE  --name=$client";       done;   done | tee abc_backuptoAvamar_$DATEX.txt

#Find backups with no expiration date
bin/ALL_clients.sh
export DATEX=$(date +%Y%m%d)
cat  ALL_clients.txt |  while read client ;
  do
    mccli backup show --verbose --name=$client  > abc$$_noenddate.txt
  COUNT=$(grep 'No end date' abc$$_noenddate.txt | wc -l)
  if [  $COUNT =  0 ]; then
      :
   else
     echo $client
     grep 'No end date' abc$$_noenddate.txt
  fi
done | tee abc_noenddate_$DATEX.txt
rm  abc$$_noenddate.txt

#Firewall
sudo service avfirewall stop
sudo service avfirewall start
sudo service avfirewall status

#Garbage collection
avmaint garbagecollect --maxtime=14400 --ava
#Check for backups in progress
dumpmaintlogs --types=gc --days=30 | grep 'in progress'
#GC History, last 7 days
dumpmaintlogs --types=gc --days=7 | grep "passes=" | awk '{print $1,$12,$13,$15}'
#Avamar 7:
dumpmaintlogs --types=gc --days=7 | grep "passes=" | awk '{print $1,$12,$14,$15,$17}'
#Skipped hashes check:
dumpmaintlogs --types=gc --days=30|grep passes|cut -d " " -f1,10,14,15,17

#HFS Check
avmaint hfscheck --rolling --ava
#(Full)
avmaint hfscheck --ava
avmaint sched resume hfscheck –ava
#HFS Check History, 30 days
dumpmaintlogs --types=hfscheck --days=30 | grep "elapsed-time=" | awk '{print $1,$12,$19}'
#with end time
dumpmaintlogs --types=hfscheck --days=30 | grep "elapsed-time=" | awk '{print $1,$12,$14,$19}'

#Installing Avamar Client Installers from SFTP - go to the appropriate directory:
cd /usr/local/avamar/src
cd /data01/avamar/repo/packages
#Login to SFTP from Avamar
#Grab multiple files with
mget *

#IPs for All Nodes
mapall --all+ --noerror 'ifconfig | grep "inet "'
#IPs for RMM 
mapall --noerror --user=root 'ipmitool lan print 1 | grep "IP Address "'

#Java check - 60 seconds
while true; do   date ;   ps -ef | grep -i java | wc -l; echo ..; sleep 60; done
#Java issues - as root, remove java_pid#####.hprof from /usr/local/avamar

#mapall prerequisite - loading the keys
ssh-agent bash
ssh-add ~/.ssh/dpnid 

#Node utilizations
avmaint nodelist | egrep 'nodetag|fs-percent-full'

#Proxycp.jar
chmod +x proxycp.jar
sudo java -jar ./proxycp.jar --listbackups --domain / --after 1970-01-01 --before 2017-04-02 > ALLBACKUPS.txt
cat ALLBACKUPS.txt
avmgr getl --path=/
avmgr getl --path=/MC_DELETED
avmgr getb --path=/MC_DELETED/ydluag12017.03.29.11.33.39
sudo java -jar ./proxycp.jar --listbackups --domain /MC_DELETED --after 1970-01-01 --before 2017-04-02 > ALLBACKUPS_DEL.txt
avmgr getl --path=/
sudo java -jar ./proxycp.jar --listbackups --domain /REPLICATE --after 1970-01-01 --before 2017-04-02 > ALLBACKUPS_REPLICATE.txt
cat ALLBACKUPS_DEL.txt
cat ALLBACKUPS_REPLICATE.txt
ssh-add -l
ssh-agent bash
cat ALLBACKUPS_DEL.txt
cat ALLBACKUPS_REPLICATE.txt
sudo ./proxycp.jar --help

#Replication check
grep avamarhostname /etc/hosts | while read IP FQN HOST; 
do echo "$IP $FQN $HOST" $(ping -c4 $IP | grep -i pack)
ip route get $IP
PAGEPORT=29000
if telnet $PAGEADDRESS $PAGEPORT </dev/null 2>&1 | grep -q Connected; then
echo telnet to port $PAGEPORT is alive ;
else
echo "telnet to port $PAGEPORT is dead"
fi
PAGEPORT=27000
if telnet $PAGEADDRESS $PAGEPORT </dev/null 2>&1 | grep -q Connected; then
echo telnet to port $PAGEPORT is alive ;
else
echo "telnet to port $PAGEPORT is dead"
fi
done  

#Sourcing the Avamar functions script
source /home/admin/bin/avamar_functions.sh

#Time synchronization issues
su – dpn
asktime
#Reference other Avamar grids for correct ntp servers

#Unacknowledged events
mccli event show --unack=true|more

#Viewuser password to default
psql -p 5555 mcdb
ALTER USER viewuser WITH PASSWORD 'viewuser1'; \q

#Zip an entire folder
tar -zcvf archive.tar.gz directory/
cd /data01/avamar/src
cp -R downloads downloads2
tar -zcvf downloads.tar.gz downloads2
